import os
import logging
from apikeyrotator import APIKeyRotator, NoAPIKeysError, AllKeysExhaustedError

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("TestRotator")

def test_apikeyrotator_basic():
    """–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ GET-–∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö API-–∫–ª—é—á–µ–π."""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—Ç–∞—Ç–æ—Ä —Å —Ñ–µ–π–∫–æ–≤—ã–º–∏ –∫–ª—é—á–∞–º–∏
        rotator = APIKeyRotator(
            api_keys=["fake_key_1", "fake_key_2"],  # –§–µ–π–∫–æ–≤—ã–µ –∫–ª—é—á–∏
            max_retries=2,
            base_delay=0.5,
            timeout=10.0,
            user_agents=[
                "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
                "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15"
            ],
            random_delay_range=(0.1, 0.5),  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
            logger=logger
        )

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ httpbin.org ‚Äî –æ–Ω –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω—ë—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏
        url = "https://httpbin.org/headers"
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ GET-–∑–∞–ø—Ä–æ—Å–∞ –∫ {url}...")

        response = rotator.get(url)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ HTTP –æ—à–∏–±–∫–∏

        data = response.json()
        logger.info("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞!")
        logger.info(f"–û—Ç–≤–µ—Ç: {data}")

        # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –µ—Å—Ç—å –Ω–∞—à User-Agent (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–ø–∏—Å–∫–∞)
        headers = data.get("headers", {})
        user_agent = headers.get("User-Agent", "")
        assert any(ua in user_agent for ua in rotator.user_agents), "User-Agent –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É!"

        logger.info("‚úÖ User-Agent —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω –∏ –≤–æ–∑–≤—Ä–∞—â—ë–Ω —Å–µ—Ä–≤–µ—Ä–æ–º.")

    except NoAPIKeysError:
        logger.error("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã API-–∫–ª—é—á–∏.")
        raise
    except AllKeysExhaustedError:
        logger.error("‚ùå –û—à–∏–±–∫–∞: –≤—Å–µ –∫–ª—é—á–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–æ–∫.")
        raise
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise

async def test_apikeyrotator_async_run():
    """–¢–µ—Å—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)."""
    try:
        from apikeyrotator import AsyncAPIKeyRotator

        async with AsyncAPIKeyRotator(
            api_keys=["fake_async_key_1"],
            max_retries=1,
            timeout=10.0,
            logger=logger
        ) as rotator:
            url = "https://httpbin.org/headers"
            logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ GET-–∑–∞–ø—Ä–æ—Å–∞ –∫ {url}...")

            # –ö–ª—é—á–µ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 'await' –ø–µ—Ä–µ–¥ rotator.get(url)
            # —Ç–∞–∫ –∫–∞–∫ rotator.get(url) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—É—Ç–∏–Ω—É, –∞ –Ω–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä.
            # aiohttp.ClientResponse, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ await, —Å–∞–º —è–≤–ª—è–µ—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.
            async with await rotator.get(url) as response:
                response.raise_for_status()
                data = await response.json()
                logger.info("‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω!")
                logger.info(f"–û—Ç–≤–µ—Ç: {data}")

    except ImportError:
        logger.warning("‚ö†Ô∏è –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–π —Å–±–æ—Ä–∫–µ.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º —Ç–µ—Å—Ç–µ: {e}")
        raise

if __name__ == "__main__":
    import asyncio

    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è apikeyrotator...")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    test_apikeyrotator_basic()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
    asyncio.run(test_apikeyrotator_async_run())

    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

